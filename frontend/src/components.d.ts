/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  prefetchComponentInterface,
} from './components/component-prefetch/component-prefetch';
import {
  InlineImageInterface,
} from './components/inline-gallery/inline-gallery';

export namespace Components {
  interface AdminHeader {}
  interface AdminMenu {}
  interface AppFooter {
    'noMargin': boolean;
  }
  interface AppHeader {
    'hideSearch': boolean;
    'hideSearchButton': boolean;
  }
  interface AppMenu {}
  interface AppRoot {}
  interface Apt212Accordion {
    'description': string;
    'label': string;
    'questionID': string;
  }
  interface Apt212Alert {
    'buttons': any[];
    'header'?: string;
    'message': string;
    'subheader'?: string;
  }
  interface Apt212Checkbox {
    'check': () => Promise<void>;
    'checked': boolean;
    'isChecked': () => Promise<any>;
    'name': string;
    'uncheck': () => Promise<void>;
    'value': string;
  }
  interface Apt212Datepicker {
    'minDate': any;
    'size': number;
    'value': any;
  }
  interface Apt212ModalBookingFrame {
    'component': string;
    'componentProps': any;
    'test': string;
  }
  interface Apt212Popover {
    'animateSrc'?: string;
    'bindTo': any;
    'component': string;
    'componentProps': any;
    'dismiss': () => Promise<void>;
    'styleOverride': any;
    'target': any;
  }
  interface Apt212Toast {
    'color': 'error' | 'success' | 'neutral';
    'dismiss': () => Promise<void>;
    'duration': number;
    'message': string;
    'present': () => Promise<void>;
  }
  interface AskQuestion {}
  interface BathroomFilter {
    'clearAll': () => Promise<void>;
    'inModal': boolean;
    'selectAll': () => Promise<void>;
  }
  interface BedroomFilter {
    'clearAll': () => Promise<void>;
    'inModal': boolean;
    'selectAll': () => Promise<void>;
  }
  interface BookingDetails {
    'item': any;
  }
  interface BookingForm {}
  interface BookingMobileBody {
    'item': any;
  }
  interface BookingTos {}
  interface BuildingTypeFilter {
    'clearAll': () => Promise<void>;
    'inModal': boolean;
    'selectAll': () => Promise<void>;
  }
  interface ComponentPrefetch {
    /**
    * @param components an array of component information to prefetch  [ { tag: 'my-component', props: { myProp: value, otherProp, otherValue } } ]
    */
    'setComponents': (components: prefetchComponentInterface[]) => Promise<void>;
    'setDelay': (delay: number) => Promise<void>;
  }
  interface Content404 {}
  interface FaqAccordian {}
  interface FilterTag {
    'tag': any;
  }
  interface FilterTags {}
  interface FilterTagsAll {}
  interface FindMore {}
  interface InlineGallery {
    'images': InlineImageInterface[];
  }
  interface InputBookingDate {
    'calendarSize': number;
    'inPopover': boolean;
    'item': any;
    'type': string;
  }
  interface InputBookingGuests {
    'item': any;
  }
  interface InputDate {
    'format': string;
    'helpText': string;
    'label': string;
    'name': string;
    'placeholder': string;
    'value': string;
  }
  interface InputDateModal {
    'helpText': string;
    'label': string;
    'value': string;
  }
  interface InputImage {
    'accept': string;
    'hasDescription': boolean;
    'hasTitle': boolean;
    'limit': number;
    'name': string;
    'value': any[];
  }
  interface InputMonthRates {
    'disableKeys': string[];
    'name': string;
    'rates': any[];
    'updateDefault': (key: any, value: any) => Promise<void>;
  }
  interface InputMultiselect {
    'name': string;
    'options': any[];
    'updateOptions': (options: any[]) => Promise<void>;
    'value': any[];
  }
  interface InputPaymentTimeline {
    'item': any;
  }
  interface InputPricing {
    'disableKeys': string[];
    'name': string;
    'rate': any;
  }
  interface InputUtilities {
    'item': any;
  }
  interface InquiryForm {}
  interface LazyImage {
    'alt': string;
    'expand': boolean;
    'src': string;
  }
  interface ListingAvailabilityForm {
    'item': any;
  }
  interface ListingCard {
    'contentPadding': boolean;
    'item': any;
    'mode': '' | 'desktop';
  }
  interface ListingEditForm {
    'item': any;
  }
  interface ListingList {
    'items': any[];
  }
  interface ListingMap {
    'item': any;
  }
  interface ListingMonthlyRateForm {
    'item': any;
    'month': number;
  }
  interface ListingSlider {
    'items': any[];
  }
  interface ListingTable {
    'items': any[];
  }
  interface LocationFilter {
    'inModal': boolean;
  }
  interface MaintainRatio {
    'height': number;
    'maxHeight'?: number;
    'maxWidth'?: number;
    'minHeight'?: number;
    'minWidth'?: number;
    'width': number;
  }
  interface MapListingCard {
    'item': any;
  }
  interface MapListingDetails {
    'markerId': any;
  }
  interface MapListingMarker {
    'markerId': any;
  }
  interface MarketFilter {
    'inModal': boolean;
  }
  interface MediaLogos {}
  interface MobileBookingModal {
    'item': any;
  }
  interface MobileFilterMenu {}
  interface MoveInDateFilter {
    'inModal': boolean;
  }
  interface NeighborhoodCard {
    'item': any;
  }
  interface NeighborhoodMap {
    'item': any;
  }
  interface NeighborhoodSlider {
    'items': any[];
  }
  interface NeighborhoodTags {
    'items': any[];
  }
  interface OwnerGlobalForm {}
  interface Page404 {}
  interface PageAbout {
    'prefetching': boolean;
  }
  interface PageAdmin {}
  interface PageAdminAgentEdit {
    'agentId': number;
  }
  interface PageAdminAgents {}
  interface PageAdminListingAdd {}
  interface PageAdminListingEdit {
    'apartmentId': number;
  }
  interface PageAdminListings {}
  interface PageAdminOwner {}
  interface PageAdminReferrals {}
  interface PageBooking {}
  interface PageBookingPw {}
  interface PageComingSoon {}
  interface PageCorporateRooms {
    'prefetching': boolean;
  }
  interface PageFaq {}
  interface PageHome {
    'prefetching': boolean;
  }
  interface PageListing {
    'apartmentId': number;
  }
  interface PageListingBody {
    'item': any;
  }
  interface PageListingCheckin {
    'item': any;
  }
  interface PageListingImageModal {
    'images': any[];
    'selected': any;
  }
  interface PageListingImageSlider {
    'item': any;
  }
  interface PageLogin {}
  interface PageNeighborhood {
    'neighborhoodId': number;
    'neighborhoodName': string;
    'prefetching': boolean;
  }
  interface PageNeighborhoods {}
  interface PagePrivacy {}
  interface PagePrivateRooms {
    'prefetching': boolean;
  }
  interface PageReferral {}
  interface PageSearch {
    'location': any;
    'neighborhoods': any;
    'prefetching': boolean;
    'size': string;
    'width': any;
  }
  interface PageWishlist {}
  interface PriceFilter {
    'inModal': boolean;
  }
  interface ReferralForm {}
  interface SearchFilters {
    'closeable': boolean;
  }
  interface SearchListingCard {
    'contentPadding': boolean;
    'item': any;
  }
  interface SearchMap {
    'addNeighborhood': (slug: any, coords: any) => Promise<void>;
    'autoInit': boolean;
    'init': () => Promise<void>;
    'listingHover': number | boolean;
    'loading': boolean;
    'location': any;
    'mapMarkers': any[];
    'removeNeighborhood': (slug: any) => Promise<void>;
    'resize': () => Promise<void>;
    'searchFilters': any;
    'showDetails': (markerId: any) => Promise<void>;
  }
  interface SearchShareselectedDropdown {}
  interface SearchSortbyDropdown {}
  interface SearchStateEmpty {}
  interface SeasonalRates {
    'item': any;
  }
  interface ShareListing {
    'items': any[];
  }
  interface StarRating {
    'color': string;
    'rating': number;
    'readonly': boolean;
    'size': number;
    'stars': number;
  }
  interface TestimonialsSlider {
    'items': any[];
  }
  interface WishlistCard {
    'item': any;
  }
  interface YoutubeVideo {
    /**
    * Explicit height of the video
    */
    'height': string;
    /**
    * The youtube video URL
    */
    'src': string;
    /**
    * Title of the video
    */
    'videoTitle': string;
    /**
    * Explicit width of the video
    */
    'width': string;
  }
}

declare global {


  interface HTMLAdminHeaderElement extends Components.AdminHeader, HTMLStencilElement {}
  var HTMLAdminHeaderElement: {
    prototype: HTMLAdminHeaderElement;
    new (): HTMLAdminHeaderElement;
  };

  interface HTMLAdminMenuElement extends Components.AdminMenu, HTMLStencilElement {}
  var HTMLAdminMenuElement: {
    prototype: HTMLAdminMenuElement;
    new (): HTMLAdminMenuElement;
  };

  interface HTMLAppFooterElement extends Components.AppFooter, HTMLStencilElement {}
  var HTMLAppFooterElement: {
    prototype: HTMLAppFooterElement;
    new (): HTMLAppFooterElement;
  };

  interface HTMLAppHeaderElement extends Components.AppHeader, HTMLStencilElement {}
  var HTMLAppHeaderElement: {
    prototype: HTMLAppHeaderElement;
    new (): HTMLAppHeaderElement;
  };

  interface HTMLAppMenuElement extends Components.AppMenu, HTMLStencilElement {}
  var HTMLAppMenuElement: {
    prototype: HTMLAppMenuElement;
    new (): HTMLAppMenuElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLApt212AccordionElement extends Components.Apt212Accordion, HTMLStencilElement {}
  var HTMLApt212AccordionElement: {
    prototype: HTMLApt212AccordionElement;
    new (): HTMLApt212AccordionElement;
  };

  interface HTMLApt212AlertElement extends Components.Apt212Alert, HTMLStencilElement {}
  var HTMLApt212AlertElement: {
    prototype: HTMLApt212AlertElement;
    new (): HTMLApt212AlertElement;
  };

  interface HTMLApt212CheckboxElement extends Components.Apt212Checkbox, HTMLStencilElement {}
  var HTMLApt212CheckboxElement: {
    prototype: HTMLApt212CheckboxElement;
    new (): HTMLApt212CheckboxElement;
  };

  interface HTMLApt212DatepickerElement extends Components.Apt212Datepicker, HTMLStencilElement {}
  var HTMLApt212DatepickerElement: {
    prototype: HTMLApt212DatepickerElement;
    new (): HTMLApt212DatepickerElement;
  };

  interface HTMLApt212ModalBookingFrameElement extends Components.Apt212ModalBookingFrame, HTMLStencilElement {}
  var HTMLApt212ModalBookingFrameElement: {
    prototype: HTMLApt212ModalBookingFrameElement;
    new (): HTMLApt212ModalBookingFrameElement;
  };

  interface HTMLApt212PopoverElement extends Components.Apt212Popover, HTMLStencilElement {}
  var HTMLApt212PopoverElement: {
    prototype: HTMLApt212PopoverElement;
    new (): HTMLApt212PopoverElement;
  };

  interface HTMLApt212ToastElement extends Components.Apt212Toast, HTMLStencilElement {}
  var HTMLApt212ToastElement: {
    prototype: HTMLApt212ToastElement;
    new (): HTMLApt212ToastElement;
  };

  interface HTMLAskQuestionElement extends Components.AskQuestion, HTMLStencilElement {}
  var HTMLAskQuestionElement: {
    prototype: HTMLAskQuestionElement;
    new (): HTMLAskQuestionElement;
  };

  interface HTMLBathroomFilterElement extends Components.BathroomFilter, HTMLStencilElement {}
  var HTMLBathroomFilterElement: {
    prototype: HTMLBathroomFilterElement;
    new (): HTMLBathroomFilterElement;
  };

  interface HTMLBedroomFilterElement extends Components.BedroomFilter, HTMLStencilElement {}
  var HTMLBedroomFilterElement: {
    prototype: HTMLBedroomFilterElement;
    new (): HTMLBedroomFilterElement;
  };

  interface HTMLBookingDetailsElement extends Components.BookingDetails, HTMLStencilElement {}
  var HTMLBookingDetailsElement: {
    prototype: HTMLBookingDetailsElement;
    new (): HTMLBookingDetailsElement;
  };

  interface HTMLBookingFormElement extends Components.BookingForm, HTMLStencilElement {}
  var HTMLBookingFormElement: {
    prototype: HTMLBookingFormElement;
    new (): HTMLBookingFormElement;
  };

  interface HTMLBookingMobileBodyElement extends Components.BookingMobileBody, HTMLStencilElement {}
  var HTMLBookingMobileBodyElement: {
    prototype: HTMLBookingMobileBodyElement;
    new (): HTMLBookingMobileBodyElement;
  };

  interface HTMLBookingTosElement extends Components.BookingTos, HTMLStencilElement {}
  var HTMLBookingTosElement: {
    prototype: HTMLBookingTosElement;
    new (): HTMLBookingTosElement;
  };

  interface HTMLBuildingTypeFilterElement extends Components.BuildingTypeFilter, HTMLStencilElement {}
  var HTMLBuildingTypeFilterElement: {
    prototype: HTMLBuildingTypeFilterElement;
    new (): HTMLBuildingTypeFilterElement;
  };

  interface HTMLComponentPrefetchElement extends Components.ComponentPrefetch, HTMLStencilElement {}
  var HTMLComponentPrefetchElement: {
    prototype: HTMLComponentPrefetchElement;
    new (): HTMLComponentPrefetchElement;
  };

  interface HTMLContent404Element extends Components.Content404, HTMLStencilElement {}
  var HTMLContent404Element: {
    prototype: HTMLContent404Element;
    new (): HTMLContent404Element;
  };

  interface HTMLFaqAccordianElement extends Components.FaqAccordian, HTMLStencilElement {}
  var HTMLFaqAccordianElement: {
    prototype: HTMLFaqAccordianElement;
    new (): HTMLFaqAccordianElement;
  };

  interface HTMLFilterTagElement extends Components.FilterTag, HTMLStencilElement {}
  var HTMLFilterTagElement: {
    prototype: HTMLFilterTagElement;
    new (): HTMLFilterTagElement;
  };

  interface HTMLFilterTagsElement extends Components.FilterTags, HTMLStencilElement {}
  var HTMLFilterTagsElement: {
    prototype: HTMLFilterTagsElement;
    new (): HTMLFilterTagsElement;
  };

  interface HTMLFilterTagsAllElement extends Components.FilterTagsAll, HTMLStencilElement {}
  var HTMLFilterTagsAllElement: {
    prototype: HTMLFilterTagsAllElement;
    new (): HTMLFilterTagsAllElement;
  };

  interface HTMLFindMoreElement extends Components.FindMore, HTMLStencilElement {}
  var HTMLFindMoreElement: {
    prototype: HTMLFindMoreElement;
    new (): HTMLFindMoreElement;
  };

  interface HTMLInlineGalleryElement extends Components.InlineGallery, HTMLStencilElement {}
  var HTMLInlineGalleryElement: {
    prototype: HTMLInlineGalleryElement;
    new (): HTMLInlineGalleryElement;
  };

  interface HTMLInputBookingDateElement extends Components.InputBookingDate, HTMLStencilElement {}
  var HTMLInputBookingDateElement: {
    prototype: HTMLInputBookingDateElement;
    new (): HTMLInputBookingDateElement;
  };

  interface HTMLInputBookingGuestsElement extends Components.InputBookingGuests, HTMLStencilElement {}
  var HTMLInputBookingGuestsElement: {
    prototype: HTMLInputBookingGuestsElement;
    new (): HTMLInputBookingGuestsElement;
  };

  interface HTMLInputDateElement extends Components.InputDate, HTMLStencilElement {}
  var HTMLInputDateElement: {
    prototype: HTMLInputDateElement;
    new (): HTMLInputDateElement;
  };

  interface HTMLInputDateModalElement extends Components.InputDateModal, HTMLStencilElement {}
  var HTMLInputDateModalElement: {
    prototype: HTMLInputDateModalElement;
    new (): HTMLInputDateModalElement;
  };

  interface HTMLInputImageElement extends Components.InputImage, HTMLStencilElement {}
  var HTMLInputImageElement: {
    prototype: HTMLInputImageElement;
    new (): HTMLInputImageElement;
  };

  interface HTMLInputMonthRatesElement extends Components.InputMonthRates, HTMLStencilElement {}
  var HTMLInputMonthRatesElement: {
    prototype: HTMLInputMonthRatesElement;
    new (): HTMLInputMonthRatesElement;
  };

  interface HTMLInputMultiselectElement extends Components.InputMultiselect, HTMLStencilElement {}
  var HTMLInputMultiselectElement: {
    prototype: HTMLInputMultiselectElement;
    new (): HTMLInputMultiselectElement;
  };

  interface HTMLInputPaymentTimelineElement extends Components.InputPaymentTimeline, HTMLStencilElement {}
  var HTMLInputPaymentTimelineElement: {
    prototype: HTMLInputPaymentTimelineElement;
    new (): HTMLInputPaymentTimelineElement;
  };

  interface HTMLInputPricingElement extends Components.InputPricing, HTMLStencilElement {}
  var HTMLInputPricingElement: {
    prototype: HTMLInputPricingElement;
    new (): HTMLInputPricingElement;
  };

  interface HTMLInputUtilitiesElement extends Components.InputUtilities, HTMLStencilElement {}
  var HTMLInputUtilitiesElement: {
    prototype: HTMLInputUtilitiesElement;
    new (): HTMLInputUtilitiesElement;
  };

  interface HTMLInquiryFormElement extends Components.InquiryForm, HTMLStencilElement {}
  var HTMLInquiryFormElement: {
    prototype: HTMLInquiryFormElement;
    new (): HTMLInquiryFormElement;
  };

  interface HTMLLazyImageElement extends Components.LazyImage, HTMLStencilElement {}
  var HTMLLazyImageElement: {
    prototype: HTMLLazyImageElement;
    new (): HTMLLazyImageElement;
  };

  interface HTMLListingAvailabilityFormElement extends Components.ListingAvailabilityForm, HTMLStencilElement {}
  var HTMLListingAvailabilityFormElement: {
    prototype: HTMLListingAvailabilityFormElement;
    new (): HTMLListingAvailabilityFormElement;
  };

  interface HTMLListingCardElement extends Components.ListingCard, HTMLStencilElement {}
  var HTMLListingCardElement: {
    prototype: HTMLListingCardElement;
    new (): HTMLListingCardElement;
  };

  interface HTMLListingEditFormElement extends Components.ListingEditForm, HTMLStencilElement {}
  var HTMLListingEditFormElement: {
    prototype: HTMLListingEditFormElement;
    new (): HTMLListingEditFormElement;
  };

  interface HTMLListingListElement extends Components.ListingList, HTMLStencilElement {}
  var HTMLListingListElement: {
    prototype: HTMLListingListElement;
    new (): HTMLListingListElement;
  };

  interface HTMLListingMapElement extends Components.ListingMap, HTMLStencilElement {}
  var HTMLListingMapElement: {
    prototype: HTMLListingMapElement;
    new (): HTMLListingMapElement;
  };

  interface HTMLListingMonthlyRateFormElement extends Components.ListingMonthlyRateForm, HTMLStencilElement {}
  var HTMLListingMonthlyRateFormElement: {
    prototype: HTMLListingMonthlyRateFormElement;
    new (): HTMLListingMonthlyRateFormElement;
  };

  interface HTMLListingSliderElement extends Components.ListingSlider, HTMLStencilElement {}
  var HTMLListingSliderElement: {
    prototype: HTMLListingSliderElement;
    new (): HTMLListingSliderElement;
  };

  interface HTMLListingTableElement extends Components.ListingTable, HTMLStencilElement {}
  var HTMLListingTableElement: {
    prototype: HTMLListingTableElement;
    new (): HTMLListingTableElement;
  };

  interface HTMLLocationFilterElement extends Components.LocationFilter, HTMLStencilElement {}
  var HTMLLocationFilterElement: {
    prototype: HTMLLocationFilterElement;
    new (): HTMLLocationFilterElement;
  };

  interface HTMLMaintainRatioElement extends Components.MaintainRatio, HTMLStencilElement {}
  var HTMLMaintainRatioElement: {
    prototype: HTMLMaintainRatioElement;
    new (): HTMLMaintainRatioElement;
  };

  interface HTMLMapListingCardElement extends Components.MapListingCard, HTMLStencilElement {}
  var HTMLMapListingCardElement: {
    prototype: HTMLMapListingCardElement;
    new (): HTMLMapListingCardElement;
  };

  interface HTMLMapListingDetailsElement extends Components.MapListingDetails, HTMLStencilElement {}
  var HTMLMapListingDetailsElement: {
    prototype: HTMLMapListingDetailsElement;
    new (): HTMLMapListingDetailsElement;
  };

  interface HTMLMapListingMarkerElement extends Components.MapListingMarker, HTMLStencilElement {}
  var HTMLMapListingMarkerElement: {
    prototype: HTMLMapListingMarkerElement;
    new (): HTMLMapListingMarkerElement;
  };

  interface HTMLMarketFilterElement extends Components.MarketFilter, HTMLStencilElement {}
  var HTMLMarketFilterElement: {
    prototype: HTMLMarketFilterElement;
    new (): HTMLMarketFilterElement;
  };

  interface HTMLMediaLogosElement extends Components.MediaLogos, HTMLStencilElement {}
  var HTMLMediaLogosElement: {
    prototype: HTMLMediaLogosElement;
    new (): HTMLMediaLogosElement;
  };

  interface HTMLMobileBookingModalElement extends Components.MobileBookingModal, HTMLStencilElement {}
  var HTMLMobileBookingModalElement: {
    prototype: HTMLMobileBookingModalElement;
    new (): HTMLMobileBookingModalElement;
  };

  interface HTMLMobileFilterMenuElement extends Components.MobileFilterMenu, HTMLStencilElement {}
  var HTMLMobileFilterMenuElement: {
    prototype: HTMLMobileFilterMenuElement;
    new (): HTMLMobileFilterMenuElement;
  };

  interface HTMLMoveInDateFilterElement extends Components.MoveInDateFilter, HTMLStencilElement {}
  var HTMLMoveInDateFilterElement: {
    prototype: HTMLMoveInDateFilterElement;
    new (): HTMLMoveInDateFilterElement;
  };

  interface HTMLNeighborhoodCardElement extends Components.NeighborhoodCard, HTMLStencilElement {}
  var HTMLNeighborhoodCardElement: {
    prototype: HTMLNeighborhoodCardElement;
    new (): HTMLNeighborhoodCardElement;
  };

  interface HTMLNeighborhoodMapElement extends Components.NeighborhoodMap, HTMLStencilElement {}
  var HTMLNeighborhoodMapElement: {
    prototype: HTMLNeighborhoodMapElement;
    new (): HTMLNeighborhoodMapElement;
  };

  interface HTMLNeighborhoodSliderElement extends Components.NeighborhoodSlider, HTMLStencilElement {}
  var HTMLNeighborhoodSliderElement: {
    prototype: HTMLNeighborhoodSliderElement;
    new (): HTMLNeighborhoodSliderElement;
  };

  interface HTMLNeighborhoodTagsElement extends Components.NeighborhoodTags, HTMLStencilElement {}
  var HTMLNeighborhoodTagsElement: {
    prototype: HTMLNeighborhoodTagsElement;
    new (): HTMLNeighborhoodTagsElement;
  };

  interface HTMLOwnerGlobalFormElement extends Components.OwnerGlobalForm, HTMLStencilElement {}
  var HTMLOwnerGlobalFormElement: {
    prototype: HTMLOwnerGlobalFormElement;
    new (): HTMLOwnerGlobalFormElement;
  };

  interface HTMLPage404Element extends Components.Page404, HTMLStencilElement {}
  var HTMLPage404Element: {
    prototype: HTMLPage404Element;
    new (): HTMLPage404Element;
  };

  interface HTMLPageAboutElement extends Components.PageAbout, HTMLStencilElement {}
  var HTMLPageAboutElement: {
    prototype: HTMLPageAboutElement;
    new (): HTMLPageAboutElement;
  };

  interface HTMLPageAdminElement extends Components.PageAdmin, HTMLStencilElement {}
  var HTMLPageAdminElement: {
    prototype: HTMLPageAdminElement;
    new (): HTMLPageAdminElement;
  };

  interface HTMLPageAdminAgentEditElement extends Components.PageAdminAgentEdit, HTMLStencilElement {}
  var HTMLPageAdminAgentEditElement: {
    prototype: HTMLPageAdminAgentEditElement;
    new (): HTMLPageAdminAgentEditElement;
  };

  interface HTMLPageAdminAgentsElement extends Components.PageAdminAgents, HTMLStencilElement {}
  var HTMLPageAdminAgentsElement: {
    prototype: HTMLPageAdminAgentsElement;
    new (): HTMLPageAdminAgentsElement;
  };

  interface HTMLPageAdminListingAddElement extends Components.PageAdminListingAdd, HTMLStencilElement {}
  var HTMLPageAdminListingAddElement: {
    prototype: HTMLPageAdminListingAddElement;
    new (): HTMLPageAdminListingAddElement;
  };

  interface HTMLPageAdminListingEditElement extends Components.PageAdminListingEdit, HTMLStencilElement {}
  var HTMLPageAdminListingEditElement: {
    prototype: HTMLPageAdminListingEditElement;
    new (): HTMLPageAdminListingEditElement;
  };

  interface HTMLPageAdminListingsElement extends Components.PageAdminListings, HTMLStencilElement {}
  var HTMLPageAdminListingsElement: {
    prototype: HTMLPageAdminListingsElement;
    new (): HTMLPageAdminListingsElement;
  };

  interface HTMLPageAdminOwnerElement extends Components.PageAdminOwner, HTMLStencilElement {}
  var HTMLPageAdminOwnerElement: {
    prototype: HTMLPageAdminOwnerElement;
    new (): HTMLPageAdminOwnerElement;
  };

  interface HTMLPageAdminReferralsElement extends Components.PageAdminReferrals, HTMLStencilElement {}
  var HTMLPageAdminReferralsElement: {
    prototype: HTMLPageAdminReferralsElement;
    new (): HTMLPageAdminReferralsElement;
  };

  interface HTMLPageBookingElement extends Components.PageBooking, HTMLStencilElement {}
  var HTMLPageBookingElement: {
    prototype: HTMLPageBookingElement;
    new (): HTMLPageBookingElement;
  };

  interface HTMLPageBookingPwElement extends Components.PageBookingPw, HTMLStencilElement {}
  var HTMLPageBookingPwElement: {
    prototype: HTMLPageBookingPwElement;
    new (): HTMLPageBookingPwElement;
  };

  interface HTMLPageComingSoonElement extends Components.PageComingSoon, HTMLStencilElement {}
  var HTMLPageComingSoonElement: {
    prototype: HTMLPageComingSoonElement;
    new (): HTMLPageComingSoonElement;
  };

  interface HTMLPageCorporateRoomsElement extends Components.PageCorporateRooms, HTMLStencilElement {}
  var HTMLPageCorporateRoomsElement: {
    prototype: HTMLPageCorporateRoomsElement;
    new (): HTMLPageCorporateRoomsElement;
  };

  interface HTMLPageFaqElement extends Components.PageFaq, HTMLStencilElement {}
  var HTMLPageFaqElement: {
    prototype: HTMLPageFaqElement;
    new (): HTMLPageFaqElement;
  };

  interface HTMLPageHomeElement extends Components.PageHome, HTMLStencilElement {}
  var HTMLPageHomeElement: {
    prototype: HTMLPageHomeElement;
    new (): HTMLPageHomeElement;
  };

  interface HTMLPageListingElement extends Components.PageListing, HTMLStencilElement {}
  var HTMLPageListingElement: {
    prototype: HTMLPageListingElement;
    new (): HTMLPageListingElement;
  };

  interface HTMLPageListingBodyElement extends Components.PageListingBody, HTMLStencilElement {}
  var HTMLPageListingBodyElement: {
    prototype: HTMLPageListingBodyElement;
    new (): HTMLPageListingBodyElement;
  };

  interface HTMLPageListingCheckinElement extends Components.PageListingCheckin, HTMLStencilElement {}
  var HTMLPageListingCheckinElement: {
    prototype: HTMLPageListingCheckinElement;
    new (): HTMLPageListingCheckinElement;
  };

  interface HTMLPageListingImageModalElement extends Components.PageListingImageModal, HTMLStencilElement {}
  var HTMLPageListingImageModalElement: {
    prototype: HTMLPageListingImageModalElement;
    new (): HTMLPageListingImageModalElement;
  };

  interface HTMLPageListingImageSliderElement extends Components.PageListingImageSlider, HTMLStencilElement {}
  var HTMLPageListingImageSliderElement: {
    prototype: HTMLPageListingImageSliderElement;
    new (): HTMLPageListingImageSliderElement;
  };

  interface HTMLPageLoginElement extends Components.PageLogin, HTMLStencilElement {}
  var HTMLPageLoginElement: {
    prototype: HTMLPageLoginElement;
    new (): HTMLPageLoginElement;
  };

  interface HTMLPageNeighborhoodElement extends Components.PageNeighborhood, HTMLStencilElement {}
  var HTMLPageNeighborhoodElement: {
    prototype: HTMLPageNeighborhoodElement;
    new (): HTMLPageNeighborhoodElement;
  };

  interface HTMLPageNeighborhoodsElement extends Components.PageNeighborhoods, HTMLStencilElement {}
  var HTMLPageNeighborhoodsElement: {
    prototype: HTMLPageNeighborhoodsElement;
    new (): HTMLPageNeighborhoodsElement;
  };

  interface HTMLPagePrivacyElement extends Components.PagePrivacy, HTMLStencilElement {}
  var HTMLPagePrivacyElement: {
    prototype: HTMLPagePrivacyElement;
    new (): HTMLPagePrivacyElement;
  };

  interface HTMLPagePrivateRoomsElement extends Components.PagePrivateRooms, HTMLStencilElement {}
  var HTMLPagePrivateRoomsElement: {
    prototype: HTMLPagePrivateRoomsElement;
    new (): HTMLPagePrivateRoomsElement;
  };

  interface HTMLPageReferralElement extends Components.PageReferral, HTMLStencilElement {}
  var HTMLPageReferralElement: {
    prototype: HTMLPageReferralElement;
    new (): HTMLPageReferralElement;
  };

  interface HTMLPageSearchElement extends Components.PageSearch, HTMLStencilElement {}
  var HTMLPageSearchElement: {
    prototype: HTMLPageSearchElement;
    new (): HTMLPageSearchElement;
  };

  interface HTMLPageWishlistElement extends Components.PageWishlist, HTMLStencilElement {}
  var HTMLPageWishlistElement: {
    prototype: HTMLPageWishlistElement;
    new (): HTMLPageWishlistElement;
  };

  interface HTMLPriceFilterElement extends Components.PriceFilter, HTMLStencilElement {}
  var HTMLPriceFilterElement: {
    prototype: HTMLPriceFilterElement;
    new (): HTMLPriceFilterElement;
  };

  interface HTMLReferralFormElement extends Components.ReferralForm, HTMLStencilElement {}
  var HTMLReferralFormElement: {
    prototype: HTMLReferralFormElement;
    new (): HTMLReferralFormElement;
  };

  interface HTMLSearchFiltersElement extends Components.SearchFilters, HTMLStencilElement {}
  var HTMLSearchFiltersElement: {
    prototype: HTMLSearchFiltersElement;
    new (): HTMLSearchFiltersElement;
  };

  interface HTMLSearchListingCardElement extends Components.SearchListingCard, HTMLStencilElement {}
  var HTMLSearchListingCardElement: {
    prototype: HTMLSearchListingCardElement;
    new (): HTMLSearchListingCardElement;
  };

  interface HTMLSearchMapElement extends Components.SearchMap, HTMLStencilElement {}
  var HTMLSearchMapElement: {
    prototype: HTMLSearchMapElement;
    new (): HTMLSearchMapElement;
  };

  interface HTMLSearchShareselectedDropdownElement extends Components.SearchShareselectedDropdown, HTMLStencilElement {}
  var HTMLSearchShareselectedDropdownElement: {
    prototype: HTMLSearchShareselectedDropdownElement;
    new (): HTMLSearchShareselectedDropdownElement;
  };

  interface HTMLSearchSortbyDropdownElement extends Components.SearchSortbyDropdown, HTMLStencilElement {}
  var HTMLSearchSortbyDropdownElement: {
    prototype: HTMLSearchSortbyDropdownElement;
    new (): HTMLSearchSortbyDropdownElement;
  };

  interface HTMLSearchStateEmptyElement extends Components.SearchStateEmpty, HTMLStencilElement {}
  var HTMLSearchStateEmptyElement: {
    prototype: HTMLSearchStateEmptyElement;
    new (): HTMLSearchStateEmptyElement;
  };

  interface HTMLSeasonalRatesElement extends Components.SeasonalRates, HTMLStencilElement {}
  var HTMLSeasonalRatesElement: {
    prototype: HTMLSeasonalRatesElement;
    new (): HTMLSeasonalRatesElement;
  };

  interface HTMLShareListingElement extends Components.ShareListing, HTMLStencilElement {}
  var HTMLShareListingElement: {
    prototype: HTMLShareListingElement;
    new (): HTMLShareListingElement;
  };

  interface HTMLStarRatingElement extends Components.StarRating, HTMLStencilElement {}
  var HTMLStarRatingElement: {
    prototype: HTMLStarRatingElement;
    new (): HTMLStarRatingElement;
  };

  interface HTMLTestimonialsSliderElement extends Components.TestimonialsSlider, HTMLStencilElement {}
  var HTMLTestimonialsSliderElement: {
    prototype: HTMLTestimonialsSliderElement;
    new (): HTMLTestimonialsSliderElement;
  };

  interface HTMLWishlistCardElement extends Components.WishlistCard, HTMLStencilElement {}
  var HTMLWishlistCardElement: {
    prototype: HTMLWishlistCardElement;
    new (): HTMLWishlistCardElement;
  };

  interface HTMLYoutubeVideoElement extends Components.YoutubeVideo, HTMLStencilElement {}
  var HTMLYoutubeVideoElement: {
    prototype: HTMLYoutubeVideoElement;
    new (): HTMLYoutubeVideoElement;
  };
  interface HTMLElementTagNameMap {
    'admin-header': HTMLAdminHeaderElement;
    'admin-menu': HTMLAdminMenuElement;
    'app-footer': HTMLAppFooterElement;
    'app-header': HTMLAppHeaderElement;
    'app-menu': HTMLAppMenuElement;
    'app-root': HTMLAppRootElement;
    'apt212-accordion': HTMLApt212AccordionElement;
    'apt212-alert': HTMLApt212AlertElement;
    'apt212-checkbox': HTMLApt212CheckboxElement;
    'apt212-datepicker': HTMLApt212DatepickerElement;
    'apt212-modal-booking-frame': HTMLApt212ModalBookingFrameElement;
    'apt212-popover': HTMLApt212PopoverElement;
    'apt212-toast': HTMLApt212ToastElement;
    'ask-question': HTMLAskQuestionElement;
    'bathroom-filter': HTMLBathroomFilterElement;
    'bedroom-filter': HTMLBedroomFilterElement;
    'booking-details': HTMLBookingDetailsElement;
    'booking-form': HTMLBookingFormElement;
    'booking-mobile-body': HTMLBookingMobileBodyElement;
    'booking-tos': HTMLBookingTosElement;
    'building-type-filter': HTMLBuildingTypeFilterElement;
    'component-prefetch': HTMLComponentPrefetchElement;
    'content-404': HTMLContent404Element;
    'faq-accordian': HTMLFaqAccordianElement;
    'filter-tag': HTMLFilterTagElement;
    'filter-tags': HTMLFilterTagsElement;
    'filter-tags-all': HTMLFilterTagsAllElement;
    'find-more': HTMLFindMoreElement;
    'inline-gallery': HTMLInlineGalleryElement;
    'input-booking-date': HTMLInputBookingDateElement;
    'input-booking-guests': HTMLInputBookingGuestsElement;
    'input-date': HTMLInputDateElement;
    'input-date-modal': HTMLInputDateModalElement;
    'input-image': HTMLInputImageElement;
    'input-month-rates': HTMLInputMonthRatesElement;
    'input-multiselect': HTMLInputMultiselectElement;
    'input-payment-timeline': HTMLInputPaymentTimelineElement;
    'input-pricing': HTMLInputPricingElement;
    'input-utilities': HTMLInputUtilitiesElement;
    'inquiry-form': HTMLInquiryFormElement;
    'lazy-image': HTMLLazyImageElement;
    'listing-availability-form': HTMLListingAvailabilityFormElement;
    'listing-card': HTMLListingCardElement;
    'listing-edit-form': HTMLListingEditFormElement;
    'listing-list': HTMLListingListElement;
    'listing-map': HTMLListingMapElement;
    'listing-monthly-rate-form': HTMLListingMonthlyRateFormElement;
    'listing-slider': HTMLListingSliderElement;
    'listing-table': HTMLListingTableElement;
    'location-filter': HTMLLocationFilterElement;
    'maintain-ratio': HTMLMaintainRatioElement;
    'map-listing-card': HTMLMapListingCardElement;
    'map-listing-details': HTMLMapListingDetailsElement;
    'map-listing-marker': HTMLMapListingMarkerElement;
    'market-filter': HTMLMarketFilterElement;
    'media-logos': HTMLMediaLogosElement;
    'mobile-booking-modal': HTMLMobileBookingModalElement;
    'mobile-filter-menu': HTMLMobileFilterMenuElement;
    'move-in-date-filter': HTMLMoveInDateFilterElement;
    'neighborhood-card': HTMLNeighborhoodCardElement;
    'neighborhood-map': HTMLNeighborhoodMapElement;
    'neighborhood-slider': HTMLNeighborhoodSliderElement;
    'neighborhood-tags': HTMLNeighborhoodTagsElement;
    'owner-global-form': HTMLOwnerGlobalFormElement;
    'page-404': HTMLPage404Element;
    'page-about': HTMLPageAboutElement;
    'page-admin': HTMLPageAdminElement;
    'page-admin-agent-edit': HTMLPageAdminAgentEditElement;
    'page-admin-agents': HTMLPageAdminAgentsElement;
    'page-admin-listing-add': HTMLPageAdminListingAddElement;
    'page-admin-listing-edit': HTMLPageAdminListingEditElement;
    'page-admin-listings': HTMLPageAdminListingsElement;
    'page-admin-owner': HTMLPageAdminOwnerElement;
    'page-admin-referrals': HTMLPageAdminReferralsElement;
    'page-booking': HTMLPageBookingElement;
    'page-booking-pw': HTMLPageBookingPwElement;
    'page-coming-soon': HTMLPageComingSoonElement;
    'page-corporate-rooms': HTMLPageCorporateRoomsElement;
    'page-faq': HTMLPageFaqElement;
    'page-home': HTMLPageHomeElement;
    'page-listing': HTMLPageListingElement;
    'page-listing-body': HTMLPageListingBodyElement;
    'page-listing-checkin': HTMLPageListingCheckinElement;
    'page-listing-image-modal': HTMLPageListingImageModalElement;
    'page-listing-image-slider': HTMLPageListingImageSliderElement;
    'page-login': HTMLPageLoginElement;
    'page-neighborhood': HTMLPageNeighborhoodElement;
    'page-neighborhoods': HTMLPageNeighborhoodsElement;
    'page-privacy': HTMLPagePrivacyElement;
    'page-private-rooms': HTMLPagePrivateRoomsElement;
    'page-referral': HTMLPageReferralElement;
    'page-search': HTMLPageSearchElement;
    'page-wishlist': HTMLPageWishlistElement;
    'price-filter': HTMLPriceFilterElement;
    'referral-form': HTMLReferralFormElement;
    'search-filters': HTMLSearchFiltersElement;
    'search-listing-card': HTMLSearchListingCardElement;
    'search-map': HTMLSearchMapElement;
    'search-shareselected-dropdown': HTMLSearchShareselectedDropdownElement;
    'search-sortby-dropdown': HTMLSearchSortbyDropdownElement;
    'search-state-empty': HTMLSearchStateEmptyElement;
    'seasonal-rates': HTMLSeasonalRatesElement;
    'share-listing': HTMLShareListingElement;
    'star-rating': HTMLStarRatingElement;
    'testimonials-slider': HTMLTestimonialsSliderElement;
    'wishlist-card': HTMLWishlistCardElement;
    'youtube-video': HTMLYoutubeVideoElement;
  }
}

declare namespace LocalJSX {
  interface AdminHeader extends JSXBase.HTMLAttributes<HTMLAdminHeaderElement> {}
  interface AdminMenu extends JSXBase.HTMLAttributes<HTMLAdminMenuElement> {}
  interface AppFooter extends JSXBase.HTMLAttributes<HTMLAppFooterElement> {
    'noMargin'?: boolean;
  }
  interface AppHeader extends JSXBase.HTMLAttributes<HTMLAppHeaderElement> {
    'hideSearch'?: boolean;
    'hideSearchButton'?: boolean;
  }
  interface AppMenu extends JSXBase.HTMLAttributes<HTMLAppMenuElement> {}
  interface AppRoot extends JSXBase.HTMLAttributes<HTMLAppRootElement> {}
  interface Apt212Accordion extends JSXBase.HTMLAttributes<HTMLApt212AccordionElement> {
    'description'?: string;
    'label'?: string;
    'onOnToggle'?: (event: CustomEvent<any>) => void;
    'questionID'?: string;
  }
  interface Apt212Alert extends JSXBase.HTMLAttributes<HTMLApt212AlertElement> {
    'buttons'?: any[];
    'header'?: string;
    'message'?: string;
    'subheader'?: string;
  }
  interface Apt212Checkbox extends JSXBase.HTMLAttributes<HTMLApt212CheckboxElement> {
    'checked'?: boolean;
    'name'?: string;
    'onCheckBoxChange'?: (event: CustomEvent<any>) => void;
    'value'?: string;
  }
  interface Apt212Datepicker extends JSXBase.HTMLAttributes<HTMLApt212DatepickerElement> {
    'minDate'?: any;
    'onSelected'?: (event: CustomEvent<any>) => void;
    'size'?: number;
    'value'?: any;
  }
  interface Apt212ModalBookingFrame extends JSXBase.HTMLAttributes<HTMLApt212ModalBookingFrameElement> {
    'component': string;
    'componentProps'?: any;
    'test'?: string;
  }
  interface Apt212Popover extends JSXBase.HTMLAttributes<HTMLApt212PopoverElement> {
    'animateSrc'?: string;
    'bindTo'?: any;
    'component': string;
    'componentProps'?: any;
    'styleOverride'?: any;
    'target'?: any;
  }
  interface Apt212Toast extends JSXBase.HTMLAttributes<HTMLApt212ToastElement> {
    'color'?: 'error' | 'success' | 'neutral';
    'duration'?: number;
    'message'?: string;
  }
  interface AskQuestion extends JSXBase.HTMLAttributes<HTMLAskQuestionElement> {}
  interface BathroomFilter extends JSXBase.HTMLAttributes<HTMLBathroomFilterElement> {
    'inModal'?: boolean;
  }
  interface BedroomFilter extends JSXBase.HTMLAttributes<HTMLBedroomFilterElement> {
    'inModal'?: boolean;
  }
  interface BookingDetails extends JSXBase.HTMLAttributes<HTMLBookingDetailsElement> {
    'item': any;
  }
  interface BookingForm extends JSXBase.HTMLAttributes<HTMLBookingFormElement> {}
  interface BookingMobileBody extends JSXBase.HTMLAttributes<HTMLBookingMobileBodyElement> {
    'item': any;
    'onSetViewEvent'?: (event: CustomEvent<any>) => void;
    'onShowGuestInput'?: (event: CustomEvent<any>) => void;
  }
  interface BookingTos extends JSXBase.HTMLAttributes<HTMLBookingTosElement> {}
  interface BuildingTypeFilter extends JSXBase.HTMLAttributes<HTMLBuildingTypeFilterElement> {
    'inModal'?: boolean;
  }
  interface ComponentPrefetch extends JSXBase.HTMLAttributes<HTMLComponentPrefetchElement> {}
  interface Content404 extends JSXBase.HTMLAttributes<HTMLContent404Element> {}
  interface FaqAccordian extends JSXBase.HTMLAttributes<HTMLFaqAccordianElement> {}
  interface FilterTag extends JSXBase.HTMLAttributes<HTMLFilterTagElement> {
    'tag'?: any;
  }
  interface FilterTags extends JSXBase.HTMLAttributes<HTMLFilterTagsElement> {
    'onShowAllTags'?: (event: CustomEvent<void>) => void;
  }
  interface FilterTagsAll extends JSXBase.HTMLAttributes<HTMLFilterTagsAllElement> {}
  interface FindMore extends JSXBase.HTMLAttributes<HTMLFindMoreElement> {}
  interface InlineGallery extends JSXBase.HTMLAttributes<HTMLInlineGalleryElement> {
    'images': InlineImageInterface[];
  }
  interface InputBookingDate extends JSXBase.HTMLAttributes<HTMLInputBookingDateElement> {
    'calendarSize'?: number;
    'inPopover'?: boolean;
    'item': any;
    'type'?: string;
  }
  interface InputBookingGuests extends JSXBase.HTMLAttributes<HTMLInputBookingGuestsElement> {
    'item': any;
  }
  interface InputDate extends JSXBase.HTMLAttributes<HTMLInputDateElement> {
    'format'?: string;
    'helpText'?: string;
    'label'?: string;
    'name'?: string;
    'placeholder'?: string;
    'value'?: string;
  }
  interface InputDateModal extends JSXBase.HTMLAttributes<HTMLInputDateModalElement> {
    'helpText'?: string;
    'label'?: string;
    'value'?: string;
  }
  interface InputImage extends JSXBase.HTMLAttributes<HTMLInputImageElement> {
    'accept'?: string;
    'hasDescription'?: boolean;
    'hasTitle'?: boolean;
    'limit'?: number;
    'name': string;
    'value'?: any[];
  }
  interface InputMonthRates extends JSXBase.HTMLAttributes<HTMLInputMonthRatesElement> {
    'disableKeys'?: string[];
    'name'?: string;
    'rates'?: any[];
  }
  interface InputMultiselect extends JSXBase.HTMLAttributes<HTMLInputMultiselectElement> {
    'name': string;
    'onOnValueChange'?: (event: CustomEvent<any>) => void;
    'options': any[];
    'value'?: any[];
  }
  interface InputPaymentTimeline extends JSXBase.HTMLAttributes<HTMLInputPaymentTimelineElement> {
    'item'?: any;
  }
  interface InputPricing extends JSXBase.HTMLAttributes<HTMLInputPricingElement> {
    'disableKeys'?: string[];
    'name': string;
    'onRateChanged'?: (event: CustomEvent<any>) => void;
    'rate'?: any;
  }
  interface InputUtilities extends JSXBase.HTMLAttributes<HTMLInputUtilitiesElement> {
    'item'?: any;
  }
  interface InquiryForm extends JSXBase.HTMLAttributes<HTMLInquiryFormElement> {}
  interface LazyImage extends JSXBase.HTMLAttributes<HTMLLazyImageElement> {
    'alt'?: string;
    'expand'?: boolean;
    'src'?: string;
  }
  interface ListingAvailabilityForm extends JSXBase.HTMLAttributes<HTMLListingAvailabilityFormElement> {
    'item': any;
    'onUpdateSuccess'?: (event: CustomEvent<any>) => void;
  }
  interface ListingCard extends JSXBase.HTMLAttributes<HTMLListingCardElement> {
    'contentPadding'?: boolean;
    'item'?: any;
    'mode'?: '' | 'desktop';
  }
  interface ListingEditForm extends JSXBase.HTMLAttributes<HTMLListingEditFormElement> {
    'item'?: any;
    'onSuccess'?: (event: CustomEvent<any>) => void;
  }
  interface ListingList extends JSXBase.HTMLAttributes<HTMLListingListElement> {
    'items'?: any[];
  }
  interface ListingMap extends JSXBase.HTMLAttributes<HTMLListingMapElement> {
    'item': any;
  }
  interface ListingMonthlyRateForm extends JSXBase.HTMLAttributes<HTMLListingMonthlyRateFormElement> {
    'item': any;
    'month'?: number;
    'onUpdateSuccess'?: (event: CustomEvent<any>) => void;
  }
  interface ListingSlider extends JSXBase.HTMLAttributes<HTMLListingSliderElement> {
    'items'?: any[];
  }
  interface ListingTable extends JSXBase.HTMLAttributes<HTMLListingTableElement> {
    'items'?: any[];
  }
  interface LocationFilter extends JSXBase.HTMLAttributes<HTMLLocationFilterElement> {
    'inModal'?: boolean;
  }
  interface MaintainRatio extends JSXBase.HTMLAttributes<HTMLMaintainRatioElement> {
    'height': number;
    'maxHeight'?: number;
    'maxWidth'?: number;
    'minHeight'?: number;
    'minWidth'?: number;
    'width': number;
  }
  interface MapListingCard extends JSXBase.HTMLAttributes<HTMLMapListingCardElement> {
    'item': any;
  }
  interface MapListingDetails extends JSXBase.HTMLAttributes<HTMLMapListingDetailsElement> {
    'markerId': any;
  }
  interface MapListingMarker extends JSXBase.HTMLAttributes<HTMLMapListingMarkerElement> {
    'markerId': any;
  }
  interface MarketFilter extends JSXBase.HTMLAttributes<HTMLMarketFilterElement> {
    'inModal'?: boolean;
  }
  interface MediaLogos extends JSXBase.HTMLAttributes<HTMLMediaLogosElement> {}
  interface MobileBookingModal extends JSXBase.HTMLAttributes<HTMLMobileBookingModalElement> {
    'item': any;
  }
  interface MobileFilterMenu extends JSXBase.HTMLAttributes<HTMLMobileFilterMenuElement> {}
  interface MoveInDateFilter extends JSXBase.HTMLAttributes<HTMLMoveInDateFilterElement> {
    'inModal'?: boolean;
  }
  interface NeighborhoodCard extends JSXBase.HTMLAttributes<HTMLNeighborhoodCardElement> {
    'item'?: any;
  }
  interface NeighborhoodMap extends JSXBase.HTMLAttributes<HTMLNeighborhoodMapElement> {
    'item': any;
  }
  interface NeighborhoodSlider extends JSXBase.HTMLAttributes<HTMLNeighborhoodSliderElement> {
    'items'?: any[];
  }
  interface NeighborhoodTags extends JSXBase.HTMLAttributes<HTMLNeighborhoodTagsElement> {
    'items'?: any[];
  }
  interface OwnerGlobalForm extends JSXBase.HTMLAttributes<HTMLOwnerGlobalFormElement> {}
  interface Page404 extends JSXBase.HTMLAttributes<HTMLPage404Element> {}
  interface PageAbout extends JSXBase.HTMLAttributes<HTMLPageAboutElement> {
    'prefetching'?: boolean;
  }
  interface PageAdmin extends JSXBase.HTMLAttributes<HTMLPageAdminElement> {}
  interface PageAdminAgentEdit extends JSXBase.HTMLAttributes<HTMLPageAdminAgentEditElement> {
    'agentId': number;
    'onSuccess'?: (event: CustomEvent<any>) => void;
  }
  interface PageAdminAgents extends JSXBase.HTMLAttributes<HTMLPageAdminAgentsElement> {}
  interface PageAdminListingAdd extends JSXBase.HTMLAttributes<HTMLPageAdminListingAddElement> {}
  interface PageAdminListingEdit extends JSXBase.HTMLAttributes<HTMLPageAdminListingEditElement> {
    'apartmentId': number;
  }
  interface PageAdminListings extends JSXBase.HTMLAttributes<HTMLPageAdminListingsElement> {}
  interface PageAdminOwner extends JSXBase.HTMLAttributes<HTMLPageAdminOwnerElement> {}
  interface PageAdminReferrals extends JSXBase.HTMLAttributes<HTMLPageAdminReferralsElement> {}
  interface PageBooking extends JSXBase.HTMLAttributes<HTMLPageBookingElement> {}
  interface PageBookingPw extends JSXBase.HTMLAttributes<HTMLPageBookingPwElement> {}
  interface PageComingSoon extends JSXBase.HTMLAttributes<HTMLPageComingSoonElement> {}
  interface PageCorporateRooms extends JSXBase.HTMLAttributes<HTMLPageCorporateRoomsElement> {
    'prefetching'?: boolean;
  }
  interface PageFaq extends JSXBase.HTMLAttributes<HTMLPageFaqElement> {}
  interface PageHome extends JSXBase.HTMLAttributes<HTMLPageHomeElement> {
    'prefetching'?: boolean;
  }
  interface PageListing extends JSXBase.HTMLAttributes<HTMLPageListingElement> {
    'apartmentId'?: number;
  }
  interface PageListingBody extends JSXBase.HTMLAttributes<HTMLPageListingBodyElement> {
    'item': any;
  }
  interface PageListingCheckin extends JSXBase.HTMLAttributes<HTMLPageListingCheckinElement> {
    'item': any;
    'onShowAskQuestionInput'?: (event: CustomEvent<any>) => void;
    'onShowBookingDetails'?: (event: CustomEvent<any>) => void;
    'onShowCheckInInput'?: (event: CustomEvent<any>) => void;
    'onShowCheckOutInput'?: (event: CustomEvent<any>) => void;
    'onShowGuestsInput'?: (event: CustomEvent<any>) => void;
    'onShowSeasonalRates'?: (event: CustomEvent<any>) => void;
  }
  interface PageListingImageModal extends JSXBase.HTMLAttributes<HTMLPageListingImageModalElement> {
    'images': any[];
    'selected': any;
  }
  interface PageListingImageSlider extends JSXBase.HTMLAttributes<HTMLPageListingImageSliderElement> {
    'item': any;
  }
  interface PageLogin extends JSXBase.HTMLAttributes<HTMLPageLoginElement> {}
  interface PageNeighborhood extends JSXBase.HTMLAttributes<HTMLPageNeighborhoodElement> {
    'neighborhoodId'?: number;
    'neighborhoodName'?: string;
    'prefetching'?: boolean;
  }
  interface PageNeighborhoods extends JSXBase.HTMLAttributes<HTMLPageNeighborhoodsElement> {}
  interface PagePrivacy extends JSXBase.HTMLAttributes<HTMLPagePrivacyElement> {}
  interface PagePrivateRooms extends JSXBase.HTMLAttributes<HTMLPagePrivateRoomsElement> {
    'prefetching'?: boolean;
  }
  interface PageReferral extends JSXBase.HTMLAttributes<HTMLPageReferralElement> {}
  interface PageSearch extends JSXBase.HTMLAttributes<HTMLPageSearchElement> {
    'location'?: any;
    'neighborhoods'?: any;
    'prefetching'?: boolean;
    'size'?: string;
    'width'?: any;
  }
  interface PageWishlist extends JSXBase.HTMLAttributes<HTMLPageWishlistElement> {}
  interface PriceFilter extends JSXBase.HTMLAttributes<HTMLPriceFilterElement> {
    'inModal'?: boolean;
  }
  interface ReferralForm extends JSXBase.HTMLAttributes<HTMLReferralFormElement> {}
  interface SearchFilters extends JSXBase.HTMLAttributes<HTMLSearchFiltersElement> {
    'closeable'?: boolean;
  }
  interface SearchListingCard extends JSXBase.HTMLAttributes<HTMLSearchListingCardElement> {
    'contentPadding'?: boolean;
    'item'?: any;
  }
  interface SearchMap extends JSXBase.HTMLAttributes<HTMLSearchMapElement> {
    'autoInit'?: boolean;
    'listingHover'?: number | boolean;
    'loading'?: boolean;
    'location'?: any;
    'mapMarkers'?: any[];
    'onMapLoaded'?: (event: CustomEvent<void>) => void;
    'searchFilters'?: any;
  }
  interface SearchShareselectedDropdown extends JSXBase.HTMLAttributes<HTMLSearchShareselectedDropdownElement> {}
  interface SearchSortbyDropdown extends JSXBase.HTMLAttributes<HTMLSearchSortbyDropdownElement> {}
  interface SearchStateEmpty extends JSXBase.HTMLAttributes<HTMLSearchStateEmptyElement> {}
  interface SeasonalRates extends JSXBase.HTMLAttributes<HTMLSeasonalRatesElement> {
    'item': any;
  }
  interface ShareListing extends JSXBase.HTMLAttributes<HTMLShareListingElement> {
    'items': any[];
  }
  interface StarRating extends JSXBase.HTMLAttributes<HTMLStarRatingElement> {
    'color'?: string;
    'onRated'?: (event: CustomEvent<number>) => void;
    'rating'?: number;
    'readonly'?: boolean;
    'size'?: number;
    'stars'?: number;
  }
  interface TestimonialsSlider extends JSXBase.HTMLAttributes<HTMLTestimonialsSliderElement> {
    'items'?: any[];
  }
  interface WishlistCard extends JSXBase.HTMLAttributes<HTMLWishlistCardElement> {
    'item': any;
  }
  interface YoutubeVideo extends JSXBase.HTMLAttributes<HTMLYoutubeVideoElement> {
    /**
    * Explicit height of the video
    */
    'height'?: string;
    /**
    * The youtube video URL
    */
    'src': string;
    /**
    * Title of the video
    */
    'videoTitle'?: string;
    /**
    * Explicit width of the video
    */
    'width'?: string;
  }

  interface IntrinsicElements {
    'admin-header': AdminHeader;
    'admin-menu': AdminMenu;
    'app-footer': AppFooter;
    'app-header': AppHeader;
    'app-menu': AppMenu;
    'app-root': AppRoot;
    'apt212-accordion': Apt212Accordion;
    'apt212-alert': Apt212Alert;
    'apt212-checkbox': Apt212Checkbox;
    'apt212-datepicker': Apt212Datepicker;
    'apt212-modal-booking-frame': Apt212ModalBookingFrame;
    'apt212-popover': Apt212Popover;
    'apt212-toast': Apt212Toast;
    'ask-question': AskQuestion;
    'bathroom-filter': BathroomFilter;
    'bedroom-filter': BedroomFilter;
    'booking-details': BookingDetails;
    'booking-form': BookingForm;
    'booking-mobile-body': BookingMobileBody;
    'booking-tos': BookingTos;
    'building-type-filter': BuildingTypeFilter;
    'component-prefetch': ComponentPrefetch;
    'content-404': Content404;
    'faq-accordian': FaqAccordian;
    'filter-tag': FilterTag;
    'filter-tags': FilterTags;
    'filter-tags-all': FilterTagsAll;
    'find-more': FindMore;
    'inline-gallery': InlineGallery;
    'input-booking-date': InputBookingDate;
    'input-booking-guests': InputBookingGuests;
    'input-date': InputDate;
    'input-date-modal': InputDateModal;
    'input-image': InputImage;
    'input-month-rates': InputMonthRates;
    'input-multiselect': InputMultiselect;
    'input-payment-timeline': InputPaymentTimeline;
    'input-pricing': InputPricing;
    'input-utilities': InputUtilities;
    'inquiry-form': InquiryForm;
    'lazy-image': LazyImage;
    'listing-availability-form': ListingAvailabilityForm;
    'listing-card': ListingCard;
    'listing-edit-form': ListingEditForm;
    'listing-list': ListingList;
    'listing-map': ListingMap;
    'listing-monthly-rate-form': ListingMonthlyRateForm;
    'listing-slider': ListingSlider;
    'listing-table': ListingTable;
    'location-filter': LocationFilter;
    'maintain-ratio': MaintainRatio;
    'map-listing-card': MapListingCard;
    'map-listing-details': MapListingDetails;
    'map-listing-marker': MapListingMarker;
    'market-filter': MarketFilter;
    'media-logos': MediaLogos;
    'mobile-booking-modal': MobileBookingModal;
    'mobile-filter-menu': MobileFilterMenu;
    'move-in-date-filter': MoveInDateFilter;
    'neighborhood-card': NeighborhoodCard;
    'neighborhood-map': NeighborhoodMap;
    'neighborhood-slider': NeighborhoodSlider;
    'neighborhood-tags': NeighborhoodTags;
    'owner-global-form': OwnerGlobalForm;
    'page-404': Page404;
    'page-about': PageAbout;
    'page-admin': PageAdmin;
    'page-admin-agent-edit': PageAdminAgentEdit;
    'page-admin-agents': PageAdminAgents;
    'page-admin-listing-add': PageAdminListingAdd;
    'page-admin-listing-edit': PageAdminListingEdit;
    'page-admin-listings': PageAdminListings;
    'page-admin-owner': PageAdminOwner;
    'page-admin-referrals': PageAdminReferrals;
    'page-booking': PageBooking;
    'page-booking-pw': PageBookingPw;
    'page-coming-soon': PageComingSoon;
    'page-corporate-rooms': PageCorporateRooms;
    'page-faq': PageFaq;
    'page-home': PageHome;
    'page-listing': PageListing;
    'page-listing-body': PageListingBody;
    'page-listing-checkin': PageListingCheckin;
    'page-listing-image-modal': PageListingImageModal;
    'page-listing-image-slider': PageListingImageSlider;
    'page-login': PageLogin;
    'page-neighborhood': PageNeighborhood;
    'page-neighborhoods': PageNeighborhoods;
    'page-privacy': PagePrivacy;
    'page-private-rooms': PagePrivateRooms;
    'page-referral': PageReferral;
    'page-search': PageSearch;
    'page-wishlist': PageWishlist;
    'price-filter': PriceFilter;
    'referral-form': ReferralForm;
    'search-filters': SearchFilters;
    'search-listing-card': SearchListingCard;
    'search-map': SearchMap;
    'search-shareselected-dropdown': SearchShareselectedDropdown;
    'search-sortby-dropdown': SearchSortbyDropdown;
    'search-state-empty': SearchStateEmpty;
    'seasonal-rates': SeasonalRates;
    'share-listing': ShareListing;
    'star-rating': StarRating;
    'testimonials-slider': TestimonialsSlider;
    'wishlist-card': WishlistCard;
    'youtube-video': YoutubeVideo;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


